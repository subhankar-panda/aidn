{"version":3,"sources":["serviceWorker.js","data/firebase/context.js","data/firebase/firebase.js","data/firebase/index.js","pages/HomePage/index.js","components/Nav.js","pages/DoctorsPage/index.js","pages/EntryPage/index.js","pages/SignUpPage/FileUpload.js","data/index.js","pages/SignUpPage/Cam.js","pages/SignUpPage/index.js","pages/LoginPage/index.js","pages/AssistantPage/index.js","pages/EmergencyPage/index.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","withFirebase","Component","props","Consumer","firebase","Firebase","sendMedicalInfo","data","a","firestore","collection","add","getUserById","personId","doc","get","app","initializeApp","this","auth","provider","GoogleAuthProvider","db","database","analytics","App","className","src","TopNav","useState","isOpen","setIsOpen","authenticated","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Button","outline","user","NavbarText","name","style","width","picUrl","DoctorsPage","handleCheckbox","label","e","setState","target","checked","handleAllergies","allergies","value","handleConditions","conditions","handleMessage","message","handleSubmit","k","mapper","state","push","console","log","arthritis","cancer","diabetes","depression","epilepsyseizures","heartproblems","heartsurgery","highbp","psycdisease","stroke","thyroid","Form","FormGroup","check","Label","Input","type","marginTop","for","onChange","FileUpload","field","form","o","file","currentTarget","files","reader","FileReader","imgTag","document","getElementById","title","onload","event","result","readAsDataURL","setFieldValue","handleChange","alt","id","signUp","body","request","post","JSON","stringify","attach","image","use","nocache","facialRecog","Cam","handleTakePhoto","dataUri","dataURItoBlob","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","onTakePhoto","customInputForm","touched","errors","invalid","FormFeedback","phoneRegExp","SignUpPage","signupUser","values","res","localStorage","setItem","schema","Yup","firstName","max","required","lastName","email","password","firstNameContact","lastNameContact","contactEmail","phoneNumber","matches","cameraCollapsed","initialValues","validationSchema","onSubmit","component","margin","LoginPage","AssistantPage","allow","height","blob","response","x","candidates","candidate","confidence","foundUser","error","withLayout","Child","person","path","exact","HomePage","EntryPage","EmergencyPage","ReactDOM","render","Provider","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.17b7497a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCEfCRFUeWcPZ5wWQPua7ozj3_-iu9q2fQ\",\n  authDomain: \"ivory-strategy-268307.firebaseapp.com\",\n  databaseURL: \"https://ivory-strategy-268307.firebaseio.com\",\n  projectId: \"ivory-strategy-268307\",\n  storageBucket: \"ivory-strategy-268307.appspot.com\",\n  messagingSenderId: \"387994896872\",\n  appId: \"1:387994896872:web:d0ad8992a5cd26f2457c5d\",\n  measurementId: \"G-6DLE7J09QD\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n\n    this.auth = app.auth();\n    this.provider = new app.auth.GoogleAuthProvider();\n    this.db = app.database();\n    this.firestore = app.firestore();\n    this.analytics = app.analytics();\n  }\n\n  sendMedicalInfo = async (data) => (await this.firestore.collection('records').add(data))\n\n  getUserById = async (personId) => (await this.firestore.collection('users').doc(personId).get()).data()\n \n}\n\nexport default Firebase;","import React from 'react';\nimport FirebaseContext from './context';\nimport Firebase from './firebase';\n\nconst withFirebase = Component => props  => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase}/>}\n  </FirebaseContext.Consumer>\n);\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport {Button, ButtonGroup} from 'reactstrap';\nimport './index.css'; // Import css modules stylesheet as styles\n\nfunction App() {\n  return (\n    <div className='home container-fluid h-100 d-flex'>\n      <div className=\"row my-auto w-100\">\n        <div className=\"col-md-6 d-flex\">\n          <img src='/aidn2.png' className=\" w-75 mx-auto img-fluid\"></img>\n        </div>\n        <div className=\"col-md-6 d-flex\">\n          <div className=\"my-auto text-center w-100 home-text\">\n            aid network. built for you.\n          </div>  \n          {/*<ButtonGroup className=\"my-auto\">\n            <Button color=\"info\" href=\"/signup/\">sign up</Button>\n            <Button color=\"info\" href=\"/login/\">log in</Button>\n            <Button color=\"danger\">call for help</Button>\n  </ButtonGroup>*/}       \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Button\n} from 'reactstrap';\n\nconst TopNav = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const {authenticated} = props;\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">aidn.</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              {!authenticated && <NavLink href=\"/signup/\"><Button outline color='secondary'>sign up</Button></NavLink>}\n            </NavItem>\n            <NavItem>\n              {!authenticated && <NavLink href=\"/login/\"><Button outline color='secondary'>log in</Button></NavLink>}\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/assist/\"><Button outline color='secondary'>assistant</Button></NavLink>\n            </NavItem>\n            <NavItem>\n              {authenticated && <NavLink href=\"/medical-history/\"><Button outline color='secondary'>medical history</Button></NavLink>}\n            </NavItem>\n            <NavItem>\n              {authenticated && <NavLink href=\"/doctors/\"><Button outline color='secondary'>doctors</Button></NavLink>}\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/emergency\"><Button color='danger'>Medical Emergency</Button></NavLink>\n            </NavItem>\n          </Nav>\n          {props.user && <NavbarText className='pr-2'>hi, {props.user.name} </NavbarText>}\n          <NavbarText><img className=\"rounded-circle img-responsive\" style={{width: '3rem'}} src={props.user && props.user.picUrl}></img></NavbarText>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default TopNav;","import React from 'react';\n\nclass DoctorsPage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        this is the page a doctor or healthcare professional would see\n      </div>\n    );\n  }\n}\n\nexport default DoctorsPage;","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { throwStatement } from '@babel/types';\nimport { withFirebase } from '../../data/firebase';\n\nclass EntryPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      arthritis: false,\n      cancer: false,\n      diabetes: false,\n      depression: false,\n      epilepsyseizures: false,\n      heartproblems: false,\n      heartsurgery: false,\n      highbp: false,\n      psycdisease: false,\n      stroke: false,\n      thyroid: false,\n    }\n  }\n /*handleEmailChange: function(e) {\n   this.setState({email: e.target.value});\n},\nhandlePasswordChange = function(e) {\n   this.setState({password: e.target.value});\n}*/\n  handleCheckbox = (label, e) => {\n    this.setState({[label]: e.target.checked})\n  }\n  handleAllergies = (e) => {\n    this.setState({allergies: e.target.value})\n  }\n  handleConditions = (e) => {\n    this.setState({conditions: e.target.value})\n  }\n  handleMessage = (e) => {\n    this.setState({message: e.target.value})\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"w-75 mx-auto\">\n        <Form>\n        <h3 className=\"mt-4 mx-auto\">medical history</h3>\n        <h4 className=\"mt-4\">please check all that apply to you:</h4>\n          \n          <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('arthritis', e)} value={this.state.arthritis}/>{' '}\n              Arthritis\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('cancer', e)} value={this.state.cancer}/>{' '}\n              Cancer\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('depression', e)} value={this.state.depression}/>{' '}\n              Depression\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('diabetes', e)} value={this.state.diabetes}/>{' '}\n              Diabetes\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('epilepsyseizures', e)} value={this.state.epilepsyseizures}/>{' '}\n              Epilepsy/Seizures\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('heartproblems', e)} value={this.state.heartproblems}/>{' '}\n              Heart Problems\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('heartsurgery', e)} value={this.state.heartsurgery}/>{' '}\n              Heart Surgery\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('highbp', e)} value={this.state.highbp}/>{' '}\n              High Blood Pressure\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('psycdisease', e)} value={this.state.psycdisease}/>{' '}\n              Psychiatric Disease\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('stroke', e)} value={this.state.stroke}/>{' '}\n              Stroke\n            </Label>\n        </FormGroup>\n        <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" onClick={(e) => this.handleCheckbox('thyroid', e)} value={this.state.thyroid}/>{' '}\n              Thyroid\n            </Label>\n        </FormGroup>\n\n        <FormGroup style={{marginTop: '15px'}}>\n        <Label for=\"exampleText\">please enter any serious allergies, separated by commas and spaces (ex. \"peanuts, ibuprofen\"):</Label>\n        <Input type=\"textarea\" name=\"text\" onChange={(e) => this.handleAllergies(e)} value={this.state.allergies} />\n        </FormGroup>\n\n        <FormGroup style={{marginTop: '15px'}}>\n        <Label for=\"exampleText\">please enter any alternate conditions your aid network should be aware of:</Label>\n        <Input type=\"textarea\" name=\"text\" onChange={(e) => this.handleConditions(e)} value={this.state.conditions} />\n        </FormGroup>\n\n        <FormGroup style={{marginTop: '15px'}}>\n        <Label for=\"exampleText\">customize your emergency screen message:</Label>\n        <Label for=\"exampleText\">(ex. \"I have had a heart transplant. Please do not administer a defibrillator.\")</Label>\n        <Input type=\"textarea\" name=\"text\" onChange={(e) => this.handleMessage(e)} value={this.state.message} />\n        </FormGroup>\n      \n      <Button onClick={this.handleSubmit}>Submit</Button>\n    </Form>\n  \n      </div>\n\n    );\n    \n  }\n  handleSubmit = async () => {\n    let conditions = []\n    const mapper = {\n      'arthritis': 'Arthritis',\n      'cancer': 'Cancer',\n      'diabetes': 'Diabetes',\n      'depression': 'Depression',\n      'epilepsyseizures': 'Epilepsy',\n      'heartproblems': 'Heart Problems',\n      'heartsurgery': 'Heart Surgery',\n      'highbp': 'High Blood Pressure',\n      'psycdisease': 'Psychiatric Disease',\n      'stroke': 'Stroke',\n      'thyroid': 'Thyroid'\n    }\n\n    for (const k in mapper) {\n      if (this.state[k] == true) {\n        conditions.push(mapper[k])\n      }\n    }\n\n    conditions.push(this.state.conditions)\n\n    let data = {conditions, allergies: this.state.allergies, message: this.state.message, personId: this.props.user.personId};\n    await this.props.firebase.sendMedicalInfo(data);\n    console.log(conditions)\n  }\n}\n\nexport default withFirebase(EntryPage);","import React from 'react';\n\nfunction FileUpload(props) {\n  const {field, form} = props;\n\n  const handleChange = (e) => {\n    const file  =  e.currentTarget.files[0];\n    const reader = new FileReader();\n    const imgTag = document.getElementById(\"myimage\");\n    imgTag.title = file.name;\n    reader.onload = function(event) {\n      imgTag.src = event.target.result;\n    };\n    reader.readAsDataURL(file);\n    form.setFieldValue(field.name, file);\n  };\n\n  return (\n    <div>\n      <input type={'file'} onChange={(o) => handleChange(o)} className={'form-control mx-auto'}/>\n        <img className=\"w-25\" src={''} alt=\"\" id={'myimage'}/>\n    </div>\n  );\n}\n\nexport default FileUpload;","import request from 'superagent';\nimport nocache from 'superagent-no-cache';\n\nexport async function signUp(body) {\n  return request\n    .post('/api/signup')\n    .field('body', JSON.stringify(body))\n    .attach('pic', body.image ? body.image : null)\n    .use(nocache)\n}\n\nexport async function facialRecog(body) {\n  console.log(body)\n  return request\n    .post('/api/lookup')\n    .field('ahhhhaha', 'pls')\n    .attach('pic', body.image ? body.image : null)\n    .use(nocache)\n}","import React from 'react';\nimport {Camera} from 'react-html5-camera-photo';\n\nclass Cam extends React.Component {\n  handleTakePhoto = async (dataUri) =>  {\n    this.props.form.setFieldValue(this.props.field.name, this.dataURItoBlob(dataUri))\n  }\n\n  dataURItoBlob = (dataURI) => {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    var byteString = atob(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to an ArrayBuffer\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    //Old Code\n    //write the ArrayBuffer to a blob, and you're done\n    //var bb = new BlobBuilder();\n    //bb.append(ab);\n    //return bb.getBlob(mimeString);\n\n    //New Code\n    return new Blob([ab], {type: mimeString});\n\n\n  }\n  render() {\n    return (\n      <Camera\n      onTakePhoto = { (dataUri) => { this.handleTakePhoto(dataUri); } }\n    />\n    )\n  }\n}\n\nexport default Cam;","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport { Input, FormFeedback, Form, FormGroup, Label, Button } from \"reactstrap\";\nimport FileUpload from './FileUpload.js';\nimport {signUp} from '../../data/index';\nimport {withFirebase} from '../../data/firebase';\nimport * as Yup from 'yup';\nimport Cam from './Cam.js';\n\nconst customInputForm = ({field, form: {touched, errors}, ...props}) => (\n  <div>\n      <Input\n          invalid={!!(touched[field.name] && errors[field.name])}\n          {...field}\n          {...props} />\n      {touched[field.name] && errors[field.name] && <FormFeedback>{errors[field.name]}</FormFeedback>}\n  </div>\n);\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n\nclass SignUpPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.schema =  Yup.object({\n      firstName: Yup.string()\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n      lastName: Yup.string()\n        .max(20, 'Must be 20 characters or less')\n        .required('Required'),\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Required'),\n      password: Yup.string()\n        .required('Required'),\n      firstNameContact: Yup.string()\n        .max(15, 'Must be 15 characters or less'),\n      lastNameContact: Yup.string()\n        .max(15, 'Must be 15 characters or less'),\n      contactEmail: Yup.string()\n        .email('Invalid email address'),\n      phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n    })\n\n    this.state = {\n      cameraCollapsed: true\n    }\n  }\n\n  signupUser = async (values) => {\n    console.log(values);\n    const res = await signUp(values);\n    localStorage.setItem('person', res.body.personId)\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={{email: '', password: ''}}\n        validationSchema={this.schema}\n        onSubmit={async (values) => {\n          await this.signupUser(values)\n        }}>\n          {({handleSubmit}) => (\n            // <div className=\"d-flex\">\n            // <img src=\"../../aidn2.png\" className=\"img-thumbnail w-25 text-center m-auto\"></img> \n            <form className=\"w-50 mx-auto mt-5\" onSubmit={handleSubmit}>\n                <h2>Your Information:</h2>\n                <FormGroup>\n                    <Label for=\"firstName\">First Name</Label>\n                    <Field name=\"firstName\" type={'text'} component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"lastName\">Last Name</Label>\n                    <Field name=\"lastName\" type={'text'} component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Field name=\"email\" type={'email'} component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"password\">Password</Label>\n                    <Field name=\"password\" type={'password'} component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"profilePhoto\">Upload Profile Photo</Label>\n                  <Field\n                    style={{margin: 'auto'}}\n                    name=\"image\"\n                    component={FileUpload}\n                  />\n                  <h3 className=\"text-center\">\n                    or\n                    <div className=\"mt-3\">{this.state.cameraCollapsed && <Button color='primary' onClick={() => this.setState({cameraCollapsed: false})}>Take a Photo</Button>}</div>\n                  </h3>\n                  {!this.state.cameraCollapsed &&  <Field name=\"image\" component={Cam} />}\n                </FormGroup>\n                <h2>Emergency Contact Information:</h2>\n                <h8>This person will be contacted in the event of an emergency</h8>\n                <FormGroup>\n                  <Label for=\"contact1\">First Name</Label>\n                  <Field name=\"firstNameContact\" type=\"firstName\" component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"contact1\">Last Name</Label>\n                  <Field name=\"lastNameContact\" type=\"lastName\" component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"contact1\">Phone Number</Label>\n                  <Field name=\"phoneNumber\" type=\"phoneNumber\" component={customInputForm}/>\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"contact1\">Email</Label>\n                  <Field name=\"contactEmail\" type=\"contactEmail\" component={customInputForm}/>\n                </FormGroup>\n                <Button color=\"info\" type=\"submit\">Sign Up</Button>\n\n                <Button color=\"link\" href=\"/login/\">Log-In Instead!</Button>\n            </form>)}\n          {/* </div>)} */}\n        </Formik>\n      );\n  }\n};\n\nexport default SignUpPage;","import React from 'react';\nimport { Formik, useFormik, Field } from 'formik';\nimport { Input, FormFeedback, Form, FormGroup, Label, Button } from \"reactstrap\";\n\nimport * as Yup from 'yup';\n\nconst customInputForm = ({field, form: {touched, errors}, ...props}) => (\n  <div>\n      <Input\n          invalid={!!(touched[field.name] && errors[field.name])}\n          {...field}\n          {...props} />\n      {touched[field.name] && errors[field.name] && <FormFeedback>{errors[field.name]}</FormFeedback>}\n  </div>\n);\n\nconst LoginPage = () => {\n\n  var validationSchema =  Yup.object({\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Required'),\n    password: Yup.string()\n      .required('Required'),\n  })\n  return (\n    <Formik\n                initialValues={{\n                    email: '',\n                    password: ''\n                }}\n                validationSchema={validationSchema}\n                onSubmit={values => {\n                    // same shape as initial values\n                    console.log(values);\n                }}>\n              <div className=\"d-flex\">\n                <img src=\"../../aidn2.png\" className=\"img-thumbnail w-25 text-center m-auto\"></img>\n                <Form className=\"w-50 mx-auto mt-5\">\n                    \n                    <FormGroup>\n                        <Label for=\"exampleEmail\">email</Label>\n                        <Field name=\"email\" type={'email'} component={customInputForm}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"examplePassword\">password</Label>\n                        <Field name=\"password\" type={'password'} component={customInputForm}/>\n                    </FormGroup>\n                    <Button color=\"info\" >log in</Button>\n                    <Button color=\"link\" href=\"/signup/\">sign up instead!</Button>\n                </Form>\n              </div>\n            </Formik>\n  );\n};\n\nexport default LoginPage;","import React from 'react';\n\nclass AssistantPage extends React.Component {\n\n  render() {\n    return (\n    <iframe allow=\"microphone;\" width='100%' height='90%' src=\"https://console.dialogflow.com/api-client/demo/embedded/d3508c61-479c-4dab-94a8-52a6267f82b2\">\n    </iframe>);\n  }\n}\n\nexport default AssistantPage;","import React from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport { facialRecog } from '../../data';\nimport { withFirebase } from '../../data/firebase';\n\n\nclass EmergencyPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      foundUser: null\n    }\n  }\n  handleTakePhoto = async (dataUri) =>  {\n    const blob = this.dataURItoBlob(dataUri);\n    const response = await facialRecog({image: blob});\n    console.log(response)\n    for (const x of response.body) {\n      for (const candidate of x.candidates) {\n        console.log(candidate)\n        if (candidate.confidence > 0.5) {\n          console.log(\"here!\")\n          this.setState({foundUser: await this.props.firebase.getUserById(candidate.personId), error: null});\n          return;\n        }\n      } \n    }\n    this.setState({foundUser: null, error: 'No Match Found :('})\n  }\n  dataURItoBlob = (dataURI) => {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    var byteString = atob(dataURI.split(',')[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    // write the bytes of the string to an ArrayBuffer\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    //Old Code\n    //write the ArrayBuffer to a blob, and you're done\n    //var bb = new BlobBuilder();\n    //bb.append(ab);\n    //return bb.getBlob(mimeString);\n\n    //New Code\n    return new Blob([ab], {type: mimeString});\n\n\n}\n  render() {\n    \n    return (\n      <div>\n        <div className=\"text-success text-center my-5\">\n          <h1>{this.state.foundUser && `User confirmed to be ${this.state.foundUser.name}`}</h1>\n        </div>\n        <div className=\"text-danger text-center my-5\">\n          <h1>{this.state.error}</h1>\n        </div>\n    <Camera\n      onTakePhoto = { (dataUri) => { this.handleTakePhoto(dataUri); } }\n    />\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(EmergencyPage);","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport {withFirebase} from './data/firebase'\nimport HomePage from './pages/HomePage';\nimport Nav from './components/Nav';\nimport DoctorsPage from './pages/DoctorsPage';\nimport EntryPage from './pages/EntryPage';\nimport SignUpPage from './pages/SignUpPage';\nimport LoginPage from './pages/LoginPage';\nimport AssistantPage from './pages/AssistantPage';\nimport EmergencyPage from './pages/EmergencyPage';\n\nclass Routes extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: false,\n      user: null\n    }\n  }\n\n    async componentDidMount() {\n      try {\n\n        const user = await this.props.firebase.getUserById(localStorage.person);\n        this.setState({user, authenticated: true})\n      } catch(e) {\n        console.error(e);\n        this.setState({authenticated: false});\n      }\n    }\n\n  withLayout = (Child) => (\n    <>\n      <Nav user={this.state.user} authenticated={this.state.authenticated}/>\n      <Child user={this.state.user}/>\n    </>\n  );\n\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          {this.withLayout(HomePage)}\n        </Route>\n        <Route path=\"/doctors\" exact={true}>\n          {this.withLayout(DoctorsPage)}\n        </Route>\n        <Route path=\"/medical-history\" exact={true}>\n          {this.withLayout(EntryPage)}\n        </Route>\n        <Route path=\"/signup\" exact={true}>\n          {this.withLayout(SignUpPage)}\n        </Route>\n        <Route path=\"/login\" exact={true}>\n          {this.withLayout(LoginPage)}\n        </Route>\n        <Route path=\"/assist\" exact={true}>\n          {this.withLayout(AssistantPage)}\n        </Route>\n        <Route path=\"/emergency\" exact={true}>\n          {this.withLayout(EmergencyPage)}\n        </Route>\n      </Switch>\n\n    );\n  }\n}\n\nexport default withFirebase(Routes);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport Routes from './Routes';\nimport Firebase, {FirebaseContext} from './data/firebase';\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <Routes />\n    </FirebaseContext.Provider>\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}